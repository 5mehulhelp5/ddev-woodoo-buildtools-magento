#!/bin/bash
#ddev-generated - Do not modify this file; your modifications will be overwritten.

function hyvaConfigGenerate() {
    ./bin/magento hyva:config:generate
}

function clearCache() {
    ./bin/magento cache:flush
    echo -e "\n${txtgrn}Cache cleared${txtrst}"
}

function clearStaticFiles() {
    rm -rf ./pub/static/*
    rm -rf ./var/view_preprocessed/*
    echo -e "${txtgrn}Static files cleared${txtrst}"
}

function checkHyva() {
    HYVA=flase
    BUILD_PATH=$1
    HYVA_FOLDER=$BUILD_PATH/web/tailwind
    if [[ -d "$HYVA_FOLDER" && -f "$HYVA_FOLDER/tailwind.config.js" && -f "$HYVA_FOLDER/package.json" ]]; then
        HYVA=true
    fi
}

if [[ "$1" == "build" || "$1" == "b" ]]; then

    # Show all available themes in config.yaml
    if [[ $(countThemesinConfig) == 1 ]]; then
       echo -e "${txtgrn}$(countThemesinConfig) Theme available to build${txtrst}\n"
    else
      echo -e "${txtgrn}$(countThemesinConfig) Themes available to build${txtrst}\n"
    fi

    # if more then one theme is available, ask if all themes should be build
    if [[ $(countThemesinConfig) -gt 1 ]]; then
        echo -en "Build all $(countThemesinConfig) Themes? [y/n] "
        read -r answer
        if [ "$answer" = "y" ] || [ "$answer" = "yes" ] || [ "$answer" = "Y" ] || [ "$answer" = "YES" ] || [ "$answer" = "ja" ] || [ "$answer" = "" ]; then
            echo -e "\n${txtgrn}Build all Themes ...${txtrst}\n"
        else
            echo -e "\n${txtylw}stopped!${txtrst}\n"
            exit 0
        fi
    fi

    # Read all themes in config.yaml
    readThemesInConfig

    # Build all themes in config.yaml
    for THEME_CODE in $THEMES_IN_CONFIG; do

        THEME_TO_BUILD=$(echo $(grep -oP '(?<='$THEME_CODE': ).*' .ddev/config.yaml) | cut -d ' ' -f 1 | sed 's/"//g')

        # checks to figure out if it is a Hyva Theme
        checkHyva $THEME_TO_BUILD

        # Try to build as Hyva Theme
        if [[ "$HYVA" == true ]]; then
            echo -e "${txtgrn}${ICON_SUCCESS} ${txtpur}$THEME_CODE${txtrst} will be build as Hyva Theme${txtrst}"
            if [[ ! -d "$THEME_TO_BUILD/web/tailwind/node_modules" ]]; then
                echo -e "\n${txtylw}Install missing node_modules ... ${txtrst}"
                cd $THEME_TO_BUILD/web/tailwind
                npm ci
                if [[ -d "$THEME_TO_BUILD/web/tailwind/node_modules" ]]; then
                    cd - > /dev/null
                    echo -e "${txtgrn}${ICON_SUCCESS} Done. ${txtrst}"
                else
                    echo -e "${txtred}${ICON_ERROR} Could not install node_modules. Please check $THEME_TO_BUILD/web/tailwind/node_modules ${txtrst}"
                fi
            fi
            cd $THEME_TO_BUILD/web/tailwind
            npm run build
            cd - > /dev/null
            clearCache
            clearStaticFiles
            hyvaConfigGenerate
            echo -e "\n${txtgrn}${ICON_SUCCESS}${bldcyn} Hyv√§ Theme Build for ${txtpur}$THEME_CODE${txtcyn} finished${txtrst}\n\n\n"

        else

            echo -e "${txtcyn}Start building ${txtpur}$THEME_CODE${txtcyn} Theme ... please wait!${txtrst}"

            # check if node_modules exist
            if [[ ! -d "./node_modules/" ]]; then
                echo -e "${txtylw}${ICON_ERROR} Install missing Node Dependencies${txtrst}"
                npm ci
            fi

            # check if grunt exist
            if [[ ! -f "./node_modules/.bin/grunt" ]]; then
                echo -e "${txtcyn}${ICON_ERROR} Install missing Grunt${txtrst}"
                npm install grunt
                npm install grunt -g
                if [[ ! -f "./node_modules/.bin/grunt" ]]; then
                    echo -e "${txtcyn}${ICON_SUCCESS} Done. ${txtrst}"
                else
                    echo -e "${txtred}${ICON_ERROR} Could not install grunt. Please check ./node_modules/.bin/ ${txtrst}"
                fi
            fi

            ./node_modules/.bin/grunt clean
            ./node_modules/.bin/grunt less

            clearCache
            clearStaticFiles

            echo -e "\n${txtgrn}${ICON_SUCCESS}${bldcyn} Theme Build for ${txtpur}$THEME_CODE${txtcyn} finished${txtrst}\n\n\n"
        fi

    done
fi
