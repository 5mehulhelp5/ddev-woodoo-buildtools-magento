#!/bin/bash
#ddev-generated - Do not modify this file; your modifications will be overwritten.


# Function to check if Hyva theme is present in the specified build path
# Parameters:
#   $1: The build path

function checkHyva() {
    HYVA=false
    local BUILD_PATH=$1
    local HYVA_FOLDER=${BUILD_PATH}/web/tailwind
    if [[ -d ${HYVA_FOLDER} && -f "${HYVA_FOLDER}/tailwind.config.js" && -f "${HYVA_FOLDER}/package.json" ]]; then
        HYVA=true
    fi
}


# Function to read themes from config-themes.yaml and store them in THEMES_IN_CONFIG variable
# Parameters:
#   None

function readThemesInConfig() {
    THEMES_IN_CONFIG=""
    if [[ ! -f ${PROJECT_CONFIG_FILE} ]]; then
        echo -e "\n${txtred}No ${PROJECT_CONFIG_FILE} found.' first.${txtrst}\n"
        exit 1
    fi
    while read -r line; do
        # Check whether the line with "Themes:" begins
        if [[ ${line} =~ ^themes: ]]; then
            while read -r next_line; do
                # Check whether the next line begins with "-"
                if [[ -n ${next_line} && ${next_line} =~ ^- ]]; then
                    THEMES_IN_CONFIG="${THEMES_IN_CONFIG} $(echo "${next_line}" | cut -d ' ' -f 2 | cut -d ':' -f 1)"
                else
                    break
                fi
            done
        fi
    done <"${PROJECT_CONFIG_FILE}"
}


# Function to check if theme paths exist in the configuration file
#
# Parameters:
#   $1 (optional) - If set to "silent", suppresses the output messages
#
# Description:
#   This function reads the themes from the config-themes.yaml file and checks if the theme paths are configured correctly.
#   It iterates through each theme code and checks if the corresponding theme path is configured and if the registration.php file exists in the theme path.
#   If any theme path is not configured correctly, it sets the PATH_ERROR flag to true and exits the script.
#   If all theme paths are valid, it prints a success message.
#
# Example usage:
#   checkThemePathExists
#   checkThemePathExists silent
#

function checkThemePathExists() {

    # get all themes from config-themes.yaml
    readThemesInConfig

    local PATH_ERROR=false

    if [[ -z ${THEMES_IN_CONFIG} ]]; then
        echo -e "\n${txtred}No Themes found in ${PROJECT_CONFIG_FILE}}${txtrst}\n"
    else
        if [[ $1 != "silent" ]]; then
            # Check if only 1 theme is configured
            if [[ $(countThemesinConfig) == 1 ]]; then
                echo -e "\n${txtgrn}$(countThemesinConfig) Theme added to ${txtcyn}${PROJECT_CONFIG_FILE}${txtrst}\n"
            else
                echo -e "\n${txtgrn}$(countThemesinConfig) Themes added to ${txtcyn}${PROJECT_CONFIG_FILE}${txtrst}\n"
            fi
        fi
        for THEME_CODE in ${THEMES_IN_CONFIG}; do
            while read -r line; do
                # Check whether the line with "Themes:" begins
                if [[ ${line} =~ ^themes: ]]; then
                    while read -r next_line; do
                        THEME_PATHES_VALID=null
                        # Check whether the next line begins with "-"
                        if [[ -n ${next_line} && ${next_line} =~ ^- ]]; then
                            if [[ ${next_line} =~ ${THEME_CODE} ]]; then
                                THEME_PATH=$(echo "${next_line}" | cut -d ' ' -f 3 | cut -d '"' -f 2)

                                if [[ ${THEME_PATH} == "" ]]; then
                                    if [[ $1 != "silent" ]]; then
                                        echo -e "${txtred}${ICON_ERROR} Theme-Path ${txtpur}${THEME_CODE} ${txtred}has not been configured yet.${txtrst}"
                                    fi
                                    THEME_PATHES_VALID=false
                                    PATH_ERROR=true
                                else
                                    # if $THEME_PATHES_VALID not false and registration.php exists in $THEME_PATH
                                    if [[ ${THEME_PATHES_VALID} != false && -f ${THEME_PATH}/registration.php ]]; then
                                        THEME_PATHES_VALID=true
                                        if [[ $1 != "silent" ]]; then
                                            echo -e "${txtgrn}${ICON_SUCCESS} ${txtcyn}Theme ${txtpur}${THEME_CODE} ${txtcyn}is correct.${txtrst}"
                                        fi
                                    else
                                        THEME_PATHES_VALID=false
                                        PATH_ERROR=true
                                        echo -e "${txtred}${ICON_ERROR} Theme-Path ${txtpur}${THEME_CODE} ${txtred}has not been configured correctly.${txtrst}"
                                    fi
                                fi
                            fi
                        fi
                    done
                    break
                fi
            done <"${PROJECT_CONFIG_FILE}"
        done

        # if checkThemePathExists has an error, it will exit the script
        if ${PATH_ERROR}; then
            echo -e "\n${txtylw}${ICON_WARNING} Some theme paths are invalid! Please check your ${PROJECT_CONFIG_FILE} ${txtrst}\n"
            exit 0
        else
            echo -e "\n${txtgrn}${ICON_SUCCESS} All theme paths are valid!${txtrst}\n"
        fi
    fi
}
