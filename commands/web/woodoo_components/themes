#!/bin/bash
#ddev-generated - Do not modify this file; your modifications will be overwritten.

function getMagento2_ThemeStoreCodes() {

    # check if mysql is installed
    if ! command -v mysql &>/dev/null; then
        echo -e "\n${txtred}mysql could not be found.${txtrst}"
        echo -e "${txtred}Please install mysql.${txtrst}\n"
        exit 1
    fi

    THEME_CODES_DB=$(mysql -e "SELECT code FROM theme" | cut -d ' ' -f 2-)
    THEME_CODES_DB=${THEME_CODES_DB#code}
    THEME_CODES_DB=$(echo "${THEME_CODES_DB}" | sed '/^$/d')
    THEME_CODES_DB_COUNT=$(echo "${THEME_CODES_DB}" | wc -w)
}

function getThemesFromDB() {
    getMagento2_ThemeStoreCodes
    if [[ -n ${THEME_CODES_DB} ]]; then
        for THEME_CODE in ${THEME_CODES_DB}; do
            echo -e "${txtpur}- ${THEME_CODE} ${txtrst}"
        done
    fi
}

function addThemesToConfig() {
    if [[ -f ${PROJECT_CONFIG_FILE} ]]; then

        getMagento2_ThemeStoreCodes

        local ADDEDTHEMES=0
        local REMOVEDTHEMES=0
        local LINE=4

        echo -en "\n${txtcyn}Woodoo has found ${txtpur}${THEME_CODES_DB_COUNT} Themes${txtcyn} in your Database.${txtrst}"

        if [[ ${THEME_CODES_DB_COUNT} -gt 1 ]]; then
            echo -en "\n${txtcyn}Choose the Themes below which should be added in ${txtpur}${PROJECT_CONFIG_FILE}${txtcyn} to watch and build later:${txtrst}\n\n"
        else
            echo -en "\n${txtcyn}Choose the Theme below which should be added in ${txtpur}${PROJECT_CONFIG_FILE}${txtcyn} to watch and build later:${txtrst}\n\n"
        fi

        if ! grep -q "themes:" "${PROJECT_CONFIG_FILE}"; then
            echo -e "themes:" >>"${PROJECT_CONFIG_FILE}"
        fi

        echo -en "${bldgrn}Tip:${txtwht} Navigate with ↑ or ↓ keys and press space to select the option${PLURAL} you want to add.\n"
        echo -en "${bldred}Reset:${txtwht} Reset configfile and remove all themes with <ESC>.\n\n"

        # Check if theme-code is already in config to set it as selected
        local THEMESALLREADYINCONFIG=''
        for THEME_CODES in ${THEME_CODES_DB}; do
            if grep -q "${THEME_CODES}" "${PROJECT_CONFIG_FILE}"; then
                THEMESALLREADYINCONFIG="$THEMESALLREADYINCONFIG --selected $THEME_CODES"
            fi
        done

        THEME_CODES_DB_OPTIONS=$(echo "${THEME_CODES_DB}" | tr '\n' ' ')
        SELECTED_THEMES=$(gum choose --cursor-prefix "[ ] " --unselected-prefix "[ ] " --selected-prefix "[✓] " $THEMESALLREADYINCONFIG --no-limit $THEME_CODES_DB_OPTIONS)

        # Save selected to config file, skip existing ones
        for THEME_CODE in ${THEME_CODES_DB}; do
            # if this THEME_CODE is in SELECTED_THEMES, add to config otherwise remove from config
            if [[ ${SELECTED_THEMES} =~ $THEME_CODE ]]; then
                # skip if theme-code is already in config
                if grep -q "${THEME_CODE}" "${PROJECT_CONFIG_FILE}"; then
                    continue
                fi
                local THEMEPATH=$(gum input --cursor.foreground "#CCC" --prompt "Enter Theme-Path (${THEME_CODE}): " --prompt.foreground="#84CC16" --placeholder "enter relative path")
                echo -e "    - ${THEME_CODE}: \"${THEMEPATH}\"" >>"${PROJECT_CONFIG_FILE}"
                ((ADDEDTHEMES++))
            else
                if grep -q "${THEME_CODE}" "${PROJECT_CONFIG_FILE}"; then
                    local LINE=$(grep -n "${THEME_CODE}" "${PROJECT_CONFIG_FILE}" | cut -d ':' -f 1)
                    sed -i "${LINE}d" "${PROJECT_CONFIG_FILE}"
                    ((REMOVEDTHEMES++))
                fi
            fi
        done

        # Counter output
        if [[ ${ADDEDTHEMES} -gt 0 ]]; then
            echo -e "\n${txtgrn}${ADDEDTHEMES} Theme(s) added to ${txtpur}${PROJECT_CONFIG_FILE}${txtrst}"
        fi
        if [[ ${REMOVEDTHEMES} -gt 0 ]]; then
            echo -e "${txtred}${REMOVEDTHEMES} Theme(s) removed from ${txtpur}${PROJECT_CONFIG_FILE}${txtrst}"
        fi

        echo -e "\n"
    else
        echo -e "\n${txtred}No ${PROJECT_CONFIG_FILE} found.'${txtrst}\n"
        exit 1
    fi
}

# Count Themes by reading config-themes.yaml with readThemesInConfig()
function countThemesinConfig() {

    readThemesInConfig

    if [[ -n ${THEMES_IN_CONFIG} ]]; then
        THEMES_COUNT=$(echo "${THEMES_IN_CONFIG}" | wc -w)
        echo "${THEMES_COUNT}"
    fi

}

# get all available themes in config-themes.yaml
function getThemesInConfig() {

    readThemesInConfig

    # get themes line by line
    if [[ -n ${THEMES_IN_CONFIG} ]]; then
        for THEME_CODE in ${THEMES_IN_CONFIG}; do
            echo -e "${txtpur}- ${THEME_CODE} ${txtrst}"
        done
    fi
}

if [[ $1 == "init" || $1 == "install" || $1 == "i" ]]; then
    addThemesToConfig
fi

if [[ $1 == "themes" || $1 == "theme" && $2 == "check" ]]; then
    checkThemePathExists
fi

if [[ $1 == "themes" || $1 == "theme" && $2 == "" ]]; then

    echo -e "\n${txtgrn}Themes found in Database:\n"
    getThemesFromDB

    checkThemePathExists
    echo -e ""
fi
