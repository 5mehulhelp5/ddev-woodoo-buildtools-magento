#!/bin/bash
#ddev-generated - Do not modify this file; your modifications will be overwritten.

function getMagento2_ThemeStoreCodes() {

    # check if mysql is installed
    if ! command -v mysql &> /dev/null
    then
        echo -e "\n${txtred}mysql could not be found.${txtrst}"
        echo -e "${txtred}Please install mysql.${txtrst}\n"
        exit 1
    fi

    THEME_CODES_DB=$(mysql -e "SELECT code FROM theme" | cut -d ' ' -f 2-)
    THEME_CODES_DB=${THEME_CODES_DB#code}
    THEME_CODES_DB=$(echo "$THEME_CODES_DB" | sed '/^$/d')
    THEME_CODES_DB_COUNT=$(echo $THEME_CODES_DB | wc -w)
}

function getThemesFromDB() {
    getMagento2_ThemeStoreCodes
    if [ -n "$THEME_CODES_DB" ]; then
        for THEME_CODE in $THEME_CODES_DB; do
            echo -e "${txtpur}- $THEME_CODE ${txtrst}"
        done
    fi
}

function addThemesToConfig() {
    if [ -f $PROJECT_CONFIG_FILE ]; then

        getMagento2_ThemeStoreCodes

        local ADDEDTHEMES=0
        local REMOVEDTHEMES=0
        local LINE=4

        echo -en "\n${txtcyn}Woodoo has found ${txtpur}$THEME_CODES_DB_COUNT Themes${txtcyn} in your Database.${txtrst}"

        if [[ $THEME_CODES_DB_COUNT -gt 1 ]]; then
            echo -en "\n${txtcyn}Choose the Themes below which should be added in ${txtpur}$PROJECT_CONFIG_FILE${txtcyn} to watch and build later:${txtrst}\n\n"
        else
            echo -en "\n${txtcyn}Choose the Theme below which should be added in ${txtpur}$PROJECT_CONFIG_FILE${txtcyn} to watch and build later:${txtrst}\n\n"
        fi

        if ! grep -q "themes:" $PROJECT_CONFIG_FILE; then
            echo -e "themes:" >> $PROJECT_CONFIG_FILE
        fi

        echo -en "${bldgrn}Tipp:${txtwht} Navigate with ↑ or ↓ keys and press Space to select the option$PLURAL you want to add.\n\n"

        # Check if theme-code is already in config to set it as selected
        local THEMESALLREADYINCONFIG=''
        for THEME_CODES in $THEME_CODES_DB; do
            if grep -q "$THEME_CODES" $PROJECT_CONFIG_FILE; then
                THEMESALLREADYINCONFIG="$THEMESALLREADYINCONFIG --selected $THEME_CODES"
            fi
        done

        SELECTED_THEMES=$(gum choose --cursor-prefix "[ ] " --unselected-prefix "[ ] " --selected-prefix "[✓] " $THEMESALLREADYINCONFIG --no-limit $THEME_CODES_DB)

        # Save selected to config file, skip existing ones
        for THEME_CODE in $THEME_CODES_DB; do

            # if this THEME_CODE is in SELECTED_THEMES, add to config otherwise remove from config
            if [[ "$SELECTED_THEMES" =~ "$THEME_CODE" ]]; then
                # skip if theme-code is already in config
                if grep -q "$THEME_CODE" $PROJECT_CONFIG_FILE; then
                    continue
                fi
                local THEMEPATH=$(gum input --cursor.foreground "#CCC" --prompt "Enter Theme-Path ($THEME_CODE): " --prompt.foreground="#84CC16" --placeholder "enter relative path")
                echo -e "    - ${THEME_CODE}: '${THEMEPATH}'" >> $PROJECT_CONFIG_FILE
                ((ADDEDTHEMES++))
            else
                if grep -q "$THEME_CODE" $PROJECT_CONFIG_FILE; then
                    local LINE=$(grep -n "$THEME_CODE" $PROJECT_CONFIG_FILE | cut -d ':' -f 1)
                    sed -i "${LINE}d" $PROJECT_CONFIG_FILE
                    ((REMOVEDTHEMES++))
                fi
            fi
        done

        # Counter output
        if [[ $ADDEDTHEMES -gt 0 ]]; then
            echo -e "\n${txtgrn}${ADDEDTHEMES} Theme(s) added to ${txtpur}$PROJECT_CONFIG_FILE${txtrst}"
        fi
        if [[ $REMOVEDTHEMES -gt 0 ]]; then
            echo -e "${txtred}${REMOVEDTHEMES} Theme(s) removed from ${txtpur}$PROJECT_CONFIG_FILE${txtrst}"
        fi

        echo -e "\n"
    else
        echo -e "\n${txtred}No $PROJECT_CONFIG_FILE found.'${txtrst}\n"
        exit 1
    fi
}

function readThemesInConfig() {

    THEMES_IN_CONFIG=""

    if [ ! -f $PROJECT_CONFIG_FILE ]; then
        echo -e "\n${txtred}No $PROJECT_CONFIG_FILE found.' first.${txtrst}\n"
        exit 1
    fi

    # Read config.yaml to get available themes
    while read -r line; do
        # Check whether the line with "Themes:" begins
        if [[ "$line" =~ ^themes: ]]; then
            while read -r next_line; do
                # Check whether the next line begins with "-"
                if [[ -n "$next_line" && "$next_line" =~ ^- ]]; then
                    THEMES_IN_CONFIG="$THEMES_IN_CONFIG $(echo $next_line | cut -d ' ' -f 2 | cut -d ':' -f 1)"
                else
                    break
                fi
            done
        fi
    done < $PROJECT_CONFIG_FILE
}

# Count Themes by reading config.yaml with readThemesInConfig()
function countThemesinConfig() {

    readThemesInConfig

    if [ -n "$THEMES_IN_CONFIG" ]; then
        THEMES_COUNT=$(echo $THEMES_IN_CONFIG | wc -w)
        echo $THEMES_COUNT
    fi

}

# get all available themes in config.yaml
function getThemesInConfig() {

    readThemesInConfig

    # get themes line by line
    if [ -n "$THEMES_IN_CONFIG" ]; then
        for THEME_CODE in $THEMES_IN_CONFIG; do
            echo -e "${txtpur}- $THEME_CODE ${txtrst}"
        done
    fi

}

#check all available themes in config.yaml if the path is not "path/to/theme"
function checkThemePathExists() {

    readThemesInConfig

    PATH_ERROR=false

    if [ -z "$THEMES_IN_CONFIG" ]; then
        echo -e "\n${txtred}No Themes found in $PROJECT_CONFIG_FILE${txtrst}\n"
    else

        # Check if only one theme is configured
        if [[ $(countThemesinConfig) == 1 ]]; then
            echo -e "\n${txtgrn}$(countThemesinConfig) Theme added to ${txtcyn}$PROJECT_CONFIG_FILE${txtrst}\n"
        else
            echo -e "\n${txtgrn}$(countThemesinConfig) Themes added to ${txtcyn}$PROJECT_CONFIG_FILE${txtrst}\n"
        fi

        for THEME_CODE in $THEMES_IN_CONFIG; do
            while read -r line; do
                # Check whether the line with "Themes:" begins
                if [[ "$line" =~ ^themes: ]]; then
                    while read -r next_line; do
                        THEME_PATHES_VALID=null
                        # Check whether the next line begins with "-"
                        if [[ -n "$next_line" && "$next_line" =~ ^- ]]; then
                            if [[ "$next_line" =~ $THEME_CODE ]]; then
                                THEME_PATH=$(echo $next_line | cut -d ' ' -f 3 | cut -d '"' -f 2)
                                if [[ "$THEME_PATH" == "path/to/theme" ]]; then
                                    echo -e "${txtred}${ICON_ERROR} Theme ${txtpur}$THEME_CODE ${txtred}has not been configured yet.${txtrst}"
                                    THEME_PATHES_VALID=false
                                    PATH_ERROR=true
                                else
                                    # if $THEME_PATHES_VALID not false and registration.php exists in $THEME_PATH
                                    if [[ "$THEME_PATHES_VALID" != false && -f $THEME_PATH/registration.php ]]; then
                                        THEME_PATHES_VALID=true
                                        echo -e "${txtgrn}${ICON_SUCCESS} Theme ${txtpur}$THEME_CODE ${txtgrn}has been correct configured.${txtrst}"
                                    else
                                        THEME_PATHES_VALID=false
                                        PATH_ERROR=true
                                        echo -e "${txtred}${ICON_ERROR} Theme ${txtpur}$THEME_CODE ${txtred}has not been configured correctly.${txtrst}"
                                    fi
                                fi
                            fi
                        fi
                    done
                    break
                fi
            done < $PROJECT_CONFIG_FILE
        done
        #if checkThemePathExists has an error, it will exit the script
        if $PATH_ERROR; then
            echo -e "\n${txtylw}${ICON_WARNING} Some Theme-Paths are invalid! Please check your $PROJECT_CONFIG_FILE ${txtrst}\n"
            exit 0
        else
            echo -e "\n${txtgrn}${ICON_SUCCESS} All Theme-Paths are valid!${txtrst}\n"
        fi
    fi
}

if [[ "$1" = "init" || "$1" = "install" || "$1" = "i" ]]; then
    addThemesToConfig
fi

if [[ "$1" = "themes" && "$2" = "check" ]]; then
    checkThemePathExists
fi


if [[ "$1" = "themes" && "$2" == "" ]]; then

    echo -e "\n${txtgrn}Themes found in Database:\n"
    getThemesFromDB

    checkThemePathExists
    echo -e ""
fi
